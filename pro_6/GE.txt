{
	int col, row, i, j, k; 
	int found=1;
	float multiply, temp, sum;	
	float temp_A[50][50];
        float temp_B[50];
	float X[50];
	
	int temp_pos[50], minpos, maxpos, temp1;
	float temp_value[50], minvalue, maxvalue, temp2;

        for( col=0; col<n; col++)
        {
        	temp_B[col]=B[col];
        	for(row=0; row<n; row++)
        	{
        		temp_A[col][row]=A[col][row];
        	}
        }        		
        		
	for( col=0; col<n && found==1; col++)
	{					
		if(temp_A[col][col]==0)
	 	{
			found=0;
	 		for(i=col+1; i<n && found==0; i++)
	 		{
	 			if(temp_A[i][col] != 0)
	 			{
	 				temp=temp_B[col];
	 				temp_B[col]=temp_B[i];
	 				temp_B[i]=temp;
	 				
					for(j=0; j<n; j++)
	 				{
	 					temp=temp_A[col][j];
	 					temp_A[col][j]=temp_A[i][j];
	 					temp_A[i][j]=temp;
	 				}					
					found=1;
	 			}
	 		}
	 	}		
	 	else
		{	
			for( row=col+1; row<n; row++)
	 		{
	 			multiply= (-1*temp_A[row][col])/(temp_A[col][col]);
	 			for( i=col; i<n; i++)
	 			{
	 				temp_A[row][i]=(multiply*temp_A[col][i])+temp_A[row][i];
	 			}
	 		
	 			temp_B[row]=(multiply*temp_B[col])+temp_B[row];
	 		}
		}
	}

	if(found==0)
	{
		output	<<"********** P6 BEGIN *************" <<endl
			<<"*** MY GAUSSIAN ELIMINATION SOLUTION:" <<endl
			<<"*** EQUATION IS SINGULAR" <<endl
			<<"*********** P6 END **************" <<endl;
	}
	else
	{	
		for(row=n-1; row>=0;row--)
		{
			sum=0;
			for( k=n-1; k>row; k--)
			{
				sum+=temp_A[row][k]*X[k];
			}
			X[row]=(temp_B[row]-sum)/temp_A[row][row];
		}
		
		if(strcmp(command, "NONE")==0)
		{
			output	<<"********** P6 BEGIN *************" <<endl
				<<"*** MY GAUSSIAN ELIMINATION SOLUTION "
				<<"(SORTED IN ASCENDING ORDER):" <<endl;
			for (i=0; i<n; i++)
			{
				output	<<"X["<<temp_pos[i]<<"]= "
					<<setprecision(2)
					<<setiosflags(ios::fixed | ios::showpoint)
					<<X[i] <<endl;
			}
			
			output	<<"*********** P6 END **************" <<endl;
		}
		else if(strcmp(command, "ASCEND")==0)
		{
			for (i=0; i<n; i++)
			{
				temp_pos[i] = i;
				temp_value[i] = X[i];
			}
			
			for(i=0; i<n; i++)
			{
				minvalue = temp_value[i];
				minpos=i;
				
				for(j=i; j<n; j++)
				{
					if (temp_value[j] < minvalue)
					{
						minvalue = temp_value[j];
						minpos=j;
					}
					else {}
				}	
				temp1 = temp_pos[i];
				temp_pos[i]=temp_pos[minpos];
				temp_pos[minpos]= temp1;
					
				temp2 = temp_value[i];
				temp_value[i] = temp_value[minpos];
				temp_value[minpos] = temp2;
					
			}
			output	<<"********** P6 BEGIN *************" <<endl
				<<"*** MY GAUSSIAN ELIMINATION SOLUTION "
				<<"(SORTED IN ASCENDING ORDER):" <<endl;
			for (i=0; i<n; i++)
			{
				output	<<"X["<<temp_pos[i]<<"]= "
					<<setprecision(2)
					<<setiosflags(ios::fixed | ios::showpoint)
					<<temp_value[i] <<endl;
			}
			output	<<"*********** P6 END **************" <<endl;
		}
		else if(strcmp(command, "DESCEND")==0)
		{
			for (i=0; i<n; i++)
			{
				temp_pos[i] = i;
				temp_value[i] = X[i];
			}
			for(i=0; i<n; i++)
			{
				maxvalue = temp_value[i];
				maxpos=i;
				
				for(j=i; j<n; j++)
				{
					if (temp_value[j] > maxvalue)
					{
						maxvalue = temp_value[j];
						maxpos=j;
					}
					else {}
				}	
				temp1 = temp_pos[i];
				temp_pos[i]=temp_pos[maxpos];
				temp_pos[maxpos]= temp1;
					
				temp2 = temp_value[i];
				temp_value[i] = temp_value[maxpos];
				temp_value[maxpos] = temp2;
			}
			
			output	<<"********** P6 BEGIN *************" <<endl
				<<"*** MY GAUSSIAN ELIMINATION SOLUTION "
				<<"(SORTED IN DESCENDING ORDER):" <<endl;
			for (i=0; i<n; i++)
			{
				output	<<"X["<<temp_pos[i]<<"]= "
					<<setprecision(2)
					<<setiosflags(ios::fixed | ios::showpoint)
					<<temp_value[i] <<endl;
			}
			output	<<"*********** P6 END **************" <<endl;
		}
		else{}
	}			
}
